Brute Force Approach

class Solution {
    public int fib(int n) {
        if(n == 0 || n == 1) {
            return n;
        }

        return fib(n-1) + fib(n-2);
    }
}

Time Compleixty : O(2^n)
Space Complexity : O(n)

Optimized Approach 1

class Solution {
    public int fib(int n) {
        ArrayList<Integer> fab = new ArrayList<>();
        fab.add(0);
        fab.add(1);

        for(int i=2; i<=n; i++) {
            fab.add(fab.get(i-1) + fab.get(i-2));
        }

        return fab.get(n);
    }
}

Time Complexity : O(n)
Space Complexity : O(n)

Optimized Approach 2

class Solution {
    public int fib(int n) {
        if(n == 0 || n == 1) return n;

        int a = 0;
        int b = 1;
        for(int i=2; i<=n; i++) {
            int temp = b;
            b = a + b;
            a = temp; 
        }

        return b;
    }
}
