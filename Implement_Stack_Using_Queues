Code 

class MyStack {
    Queue<Integer> q = new ArrayDeque<>();

    public MyStack() {
        
    }
    
    public void push(int x) {
        if(q.isEmpty()) { 
            q.add(x);
            return;
        }

        q.add(x);
        int n = q.size();
        for(int i=1; i<n; i++) {
            q.add(q.remove());
        }
    }
    
    public int pop() {
        if(q.isEmpty()) return -1;

        return q.remove();
    }
    
    public int top() {
        if(q.isEmpty()) return -1;

        return q.peek();
    }
    
    public boolean empty() {
        return q.size() == 0;
    }
}

Time Complexity 
Push : O(n)
Pop : O(1)
Top : O(1)
Empty : O(1)

Space Complexity : O()
