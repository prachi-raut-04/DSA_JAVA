Code 

class MyQueue {
    Stack<Integer> st = new Stack<>();
    Stack<Integer> hSt = new Stack<>();

    public MyQueue() {
        
    }
    
    public void push(int x) {
        if(st.isEmpty()) {
            st.push(x);
            return;
        }

        while(st.size() > 0) {
            hSt.push(st.pop());
        }

        st.push(x);

        while(hSt.size() > 0) {
            st.push(hSt.pop());
        }
    }

    public int pop() {
        if(st.isEmpty()) return -1;

        return st.pop();
    }

    public int peek() {
        if(st.isEmpty()) return -1;
    
        return st.peek();
    }
 
    public boolean empty() {
        return st.size() == 0;
    }
}

Time Complexity 
push : 
pop :
Peek : 
empty : 

Space Complexity : O()
