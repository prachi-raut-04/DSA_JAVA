Approach 

class Solution {
    public int sqOfNum(int n) {
        int sum = 0;
        while(n > 0) {
            int lD = n % 10;
            sum += lD * lD;
            n = n / 10;
        }
        return sum;
    }
    public boolean isHappy(int n) {
        if(n == 1) return true;
        else if(n == 2 || n == 3) return false;
        else {
            Set<Integer> seen = new HashSet<>();

            while(n != 1 && !seen.contains(n)) {
                seen.add(n);
                n = sqOfNum(n);
            }

            return n == 1;
        }
    }
}

Time Complexity :
